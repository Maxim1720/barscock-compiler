from src.analyzer.symantic.analyzer.identifier import IdentifiersAnalyzer

# ОБРАБОТКА ОПИСАНИЯ
# Обработка описания нужна для анализа уникальности описываемых идентификаторов
"""
Задача обработки описаний - проверить, все ли переменные программы
описаны правильно и только один раз.
"""
# 1
# Создаем файл новый для идентификаторов с помощью
# create_ti
# туда добавляем не просто идентификаторы, но еще и флаг описания и тип данных идентификатора

# 2
# Изменяем файл с идентификаторами при чтении секции описания идентификаторов программы

# 3
# После всего этого следует сравнить val каждой строки из файла symantic/ti.txt с каждой строкой lex/ti.txt
# например:
# |   lex/ti.txt   |   symantic/ti.txt  |
# ---------------------------------------
# |       a        |      a int False   |

# 4
# Убедиться, что идентификаторы еще не были описаны


class SymanticAnalyzer:
    def analyze(self):
        IdentifiersAnalyzer().analyze()










